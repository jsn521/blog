var handlers = require('./handlers.js');

var empty = {
    onopen: function() {},
    onclose: function() {},
    ontext: function() {},
    onend: function() {}
};

var parser = new (require('./parser.js').Parser)({
    decode: false
});

//var dom = new handlers.DOM(parser);

var dom = new handlers.DOM(function() {})

//dom.listen(parser);
// *
parser.on('open', function() {});
parser.on('close', function() {});
parser.on('text', function() {});
// */

var bench = function() {
    var n = 0;
    (function d() {
        parser.write('<foo bar="baz">quux</foo>');
        parser.end();
        n++, process.nextTick(d);
    })();
    var its = [];
    setInterval(function() {
        console.log(n + ' el/s');
        its.push(n), n = 0;
    }, 1000);
    process.on('SIGINT', function() {
        var average = its.reduce(function(average, v) {
            return average+v;
        }) / its.length;
        console.log("average:", average, "el/s");
        process.exit(0);
    });
};

bench();
